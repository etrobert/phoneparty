@import url('/common/base.css');
@import url('/common/push-button.css');
@import url('/apps/tunnel-vision/base.css');
@import url('/host/audience.css');
@import url('/host/speech-bubble.css');

:host {
  height: 100%;
  display: flex;
  flex-direction: column;
}

#main-content {
  flex-grow: 1;

  display: flex;
  justify-content: center;
  align-items:     center;

  position: relative;
}

audience-el {
  width: 100%;
  flex-shrink: 0;
  margin-top: 2.5rem;
  z-index: 1;
}

#message {
  opacity: 0;
  transform: scale(.5);
  transition: 1s opacity, 1s transform;

  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;

  font-weight: bold;
  font-size: 3rem;
}
#message:not(:empty) {
  opacity: 1;
  transform: scale(1);
}
#message.clear {
  opacity: 0;
  transform: scale(.5);
}
#message push-button {
  font-size: 3.5rem;
  padding: .8rem;
  border-radius: 1rem;
  font-weight: bold;
}
#message h1 {
  font-size: 6rem;
  color: var(--mauve);
  text-align: center;
  margin: 1rem;
}
#message p {
  -webkit-text-stroke: transparent;
  text-shadow: none;
}

#grid {
  position: absolute;
  left:   0;
  top:    0;
  right:  0;
  bottom: 0;

  display: grid;
  align-content:   center;
  justify-content: center;

  opacity: 0;
}
#grid.reveal {
  opacity: 1;
}

#grid .cell {
  opacity: 1;
  transition: 1s opacity;
  position: relative;
}
#grid .cell.present {
  /* Make the canvas inside the cell fill the whole grid, by making the canvas absolute-positioned coordinates no longer relative to the cell, and therefore to the parent grid instead.*/
  position: static;
}
#grid.fade-out .cell:not(.present) {
  opacity: 0;
}

#grid .cell canvas {
  /* Fill the whole area of the cell (if the cell has position: relative), otherwise the whole grid (when the photo is presented) */
  position: absolute;
  left: 0;
  top:  0;
  width:  100%;
  height: 100%;

  object-fit: contain;
  cursor: pointer;
}
#grid .cell.present canvas {
  z-index: 1;
}

#target {
  position: absolute;
  left: 0;
  z-index: 2;

  background: var(--sand-light);
  border-bottom-right-radius: 1rem;
  box-shadow: 0 0 1rem rgb(0, 0, 0, .5);
  padding: 0 .5rem .5rem .5rem;

  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items:     center;
}
#target img {
  width:  3rem;
  height: 3rem;
}
#target label {
  font-size: 2.5rem;
  font-weight: bold;
  margin-top: .5rem;
}
#target.transition {
  transition: 1s opacity, 1s top;
}
#target:not(.reveal) {
  opacity: 0;
  top: -10rem;
}
#target.reveal {
  opacity: 1;
  top: 0;
}

#buttons {
  display: flex;
  justify-content: center;
  padding: .5rem;
  padding-left: 6rem;
}

#buttons push-button {
  padding: .5rem;
  border-radius: 1rem;

  font-size: 2rem;
  font-weight: 400;
  -webkit-text-stroke: transparent;
  text-shadow: none;

  opacity: 0;
  transition: 1s opacity;
}
#buttons push-button.reveal {
  opacity: 1;
}
#buttons push-button:first-of-type {
  margin-left: auto;
}

#back-button {
  background-image: url('data:image/svg+xml,\
    <svg viewBox="0 0 1 1" xmlns="http://www.w3.org/2000/svg">\
      <path fill="%23a35d6a" d="M0.9,0 v1 L0.1,0.5"/>\
    </svg>\
  ');
  background-position: left;
  padding-left: 2rem !important;
  background-size: 1.5rem;
}

#end-round-button {
  margin-left: auto;

  background-image: url('data:image/svg+xml,\
    <svg viewBox="0 0 1 1" xmlns="http://www.w3.org/2000/svg">\
      <path fill="%23a35d6a" d="M0.1,0 v1 L0.9,0.5"/>\
    </svg>\
  ');
  background-position: right;
  padding-right: 2rem !important;
  background-size: 1.5rem;
}
